name: ditzz RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          # (Kode ini tetap sama)
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Create RDP User with Secure Password
        run: |
          # --- GANTI PASSWORD ANDA DI SINI ---
          $password = "GantiPasswordKuatAndaDisini123!"
          
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "ditzz" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "ditzz"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "ditzz"
          echo "RDP_CREDS=User: ditzz | Password: $password" >> $env:GITHUB_ENV
          if (-not (Get-LocalUser -Name "ditzz")) { Write-Error "User creation failed"; exit 1 }

      # === BLOK YANG DIPERBARUI ===
      - name: Download and Set Custom Wallpaper for New Users
        shell: powershell
        run: |
          $imageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:AN9GcQx_P3RS0Y9zveM2eRcVw5jWj1t2--fKZLgOYjkoCHzq0R1cEGOlANLyBlu&s=10"
          $imagePath = "C:\wallpaper.jpg"
          
          Write-Host "Downloading wallpaper..."
          Invoke-WebRequest -Uri $imageUrl -OutFile $imagePath
          
          Write-Host "Applying wallpaper to the Default User profile..."
          reg load HKU\DefaultUser "C:\Users\Default\NTUSER.DAT"
          Set-ItemProperty -Path 'Registry::HKU\DefaultUser\Control Panel\Desktop' -Name Wallpaper -Value $imagePath
          Set-ItemProperty -Path 'Registry::HKU\DefaultUser\Control Panel\Desktop' -Name 'WallpaperStyle' -Value 2
          Set-ItemProperty -Path 'Registry::HKU\DefaultUser\Control Panel\Desktop' -Name 'TileWallpaper' -Value 0
          reg unload HKU\DefaultUser
          
          Write-Host "Default User profile has been updated. Wallpaper will be set for new user 'ditzz'."

      - name: Install Tailscale
        run: |
          # (Kode ini tetap sama)
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale Connection
        run: |
          # (Kode ini tetap sama)
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }
          if (-not $tsIP) { Write-Error "Tailscale IP not assigned. Exiting."; exit 1 }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
      
      - name: Verify RDP Accessibility
        run: |
          # (Kode ini tetap sama)
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) { Write-Error "TCP connection to RDP port 3389 failed"; exit 1 }
          Write-Host "TCP connectivity successful!"

      - name: Maintain Connection
        run: |
          # (Kode ini tetap sama)
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: ditzz"
          Write-Host "Password: $(echo $env:RDP_CREDS | ForEach-Object { $_.Split('|')[1].Trim().Split(':')[1].Trim() })"
          Write-Host "==================`n"
          while ($true) {
              Write-Host "[$(Get-Date)] RDP Active - Use Ctrl+C in workflow to terminate"
              Start-Sleep -Seconds 300
          }
